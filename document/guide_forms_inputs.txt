Tipos de campos en Django Forms
Aquí tienes una lista de algunos tipos de campos comunes que puedes usar en Django:

CharField: Campo de texto simple.

python
Copiar código
nombre = forms.CharField(max_length=100)
EmailField: Campo de correo electrónico.

python
Copiar código
correo = forms.EmailField()
IntegerField: Campo para ingresar números enteros.

python
Copiar código
edad = forms.IntegerField()
BooleanField: Campo tipo checkbox (booleano).

python
Copiar código
acepto_terminos = forms.BooleanField()
DateField: Campo para ingresar fechas.

python
Copiar código
fecha_nacimiento = forms.DateField(widget=forms.SelectDateWidget)
DateTimeField: Campo para ingresar fechas y horas.

python
Copiar código
fecha_evento = forms.DateTimeField()
ChoiceField: Campo para seleccionar una opción de una lista de opciones.

python
Copiar código
opciones = forms.ChoiceField(choices=[('1', 'Opción 1'), ('2', 'Opción 2')])
MultipleChoiceField: Campo para seleccionar múltiples opciones de una lista.

python
Copiar código
categorias = forms.MultipleChoiceField(choices=[('a', 'Categoría A'), ('b', 'Categoría B')])
URLField: Campo para ingresar una URL.

python
Copiar código
sitio_web = forms.URLField()
FileField: Campo para cargar archivos.

python
Copiar código
archivo = forms.FileField()
ImageField: Campo para cargar imágenes (requiere Pillow).

python
Copiar código
imagen = forms.ImageField()
TextField: Campo para ingresar texto largo (usualmente renderizado como un <textarea>).

python
Copiar código
comentario = forms.CharField(widget=forms.Textarea)
PasswordInput: Para campos de contraseña (ocultos).

python
Copiar código
contraseña = forms.CharField(widget=forms.PasswordInput)
RadioSelect: Para opciones de selección única con botones de radio.

python
Copiar código
genero = forms.ChoiceField(choices=[('M', 'Masculino'), ('F', 'Femenino')], widget=forms.Radi





# Vista de la Ventana Inicial (Login)
def Home(request):
    # Condicional para ingresar al login si es TRUE  
    if request.method == "GET":
        return render(request, "index.html")
    # Condicional para consultar base de datos si es FALSE
    else:
      # Recibe el Usuario ingresado en el formulario
        usuario = request.POST["user"]
      # Recibe la contraseña ingresado en el formulario
        contrasena = request.POST["password"]
      # guarda los valores de la tabla que contiene a los usuarios
        users = Usuarios.objects.values()
        
        # Compara si el usuario y contraseña ingresados existen en la base de datos
        for user in users:
          # Si es True redirige al Dashboard
            if usuario == user["user"] and contrasena == user["password"]:
              # Guardar datos en la sesión
              request.session['user'] = {
                "user": user,
                "jerarquia": user.encargado.jerarquia,
                "nombres": user.encargado.nombres,
                "apellidos": user.encargado.apellidos,
              }
              print(user)
              return redirect("/dashboard/")
              
        # Si al verificar en todos los elementos no encuentra recarga el login
        return redirect("/")

# Vista de la ventana del Dashboard
def Dashboard(request):
  user = request.session.get('user')
  
  return render(request, "dashboard.html", {
      "user": user,
      "jerarquia": user["jerarquia"],
      "nombres": user["nombres"],
      "apellidos": user["apellidos"],
      })
